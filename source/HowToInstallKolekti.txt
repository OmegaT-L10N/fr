How to install Kolekti


/// Installation of the environment ///

* git

Systems other than Windows probably already have this.

Windows:

Install the latest version of git for Windows from
https://git-for-windows.github.io/

* Python

Systems other than Windows probably already have this.

Windows:

Install the latest version of Python 2.7, 32-bit (even on 64-bit PCs):
https://www.python.org/downloads/

When installing, you are recommended to select the option (off by default) to
add Python to your Path. If you missed it, add these directories manually:
- C:\Python27
- C:\Python27\Scripts

* pysvn

Check your package manager, as this is not available in PyPI. On OS X this is
available in MacPorts as `py27-pysvn`.

Windows:

Download and install a binary kit from
http://pysvn.tigris.org/project_downloads.html
- Extension Version: 1.7.10 or higher
- Python Version: Python 2.7
- Subversion Version: Your choice

* FOP (optional?)

TODO

* PrinceXML (optional?)

Windows:

Download the setup program from http://www.princexml.com/download/
Add C:\Program Files (x86)\Prince\Engine\bin to your Path.

* lxml

On systems other than Windows you can let pip install this as a dependency of
kolteki later.

Windows:

Download an installer for the latest version of lxml + Python 2.7 from
https://pypi.python.org/pypi/lxml

* virtualenv (optional)

Once you have a working Python installation, install via pip:
pip install virtualenv


/// Installation of Kolekti ///

If you are installing to a virtualenv, make sure system packages are available:
virtualenv --system-site-packages <envname>

Install via pip:
pip install git+https://github.com/kolekti/kolekti.git@dev


/// Publication of the UserGuide (from the command line) ///

Ensure that the `kolekti` command is available on your Path.

Usage of the command line is:

kolekti [-v] [-b BASE] publish [-j JOB] [-l LANGUAGES] toc

With:

-b BASE: path to the kolekti base (project) to use

-j JOB (optional) : path to the publication parameter file to use, replaces the value available in frame (toc) 

-l LANGUAGES: list of language codes to publish, separated by commas

toc: frame to publish

Command line example:
kolekti -b C:\[...]\trunk\doc_src2 publish [-j JOB] -l fr,en C:\[...]\trunk\doc_src2\sources\{LANG}\tocs\UserGuide.html

It is possible to get a verbose output by adding -v after kolekti.
